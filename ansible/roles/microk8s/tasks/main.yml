---
- name: ensure snapd is installed
  apt:
    name: snapd
    state: present

- name: wait for snap to be loaded...
  shell: snap wait system seed.loaded

- name: install microk8s --classic --channel={{ microk8s_channel | default("1.18/stable") }}
  snap:
    name: microk8s
    classic: yes
    channel: "{{ microk8s_channel | default('1.18/stable') }}"

- name: wait for microk8s to become ready...
  shell: microk8s status --wait-ready

- name: enable microk8s services
  shell: microk8s enable dns helm

- name: microk8s tweaks
  import_tasks: "{{ role_path }}/tasks/modifications.yml"

- name: generate kubeconfig
  shell: microk8s config > $PWD/kubeconfig

- name: ensure external ip address is in kubeconfig
  replace:
    path: $PWD/kubeconfig
    regexp: "server: https://[0-9\\.]+:16443"
    replace: "server: https://{{ external_ip }}:16443"

- fetch:
    src: $PWD/kubeconfig
    dest: "{{ inventory_dir }}/../../private/"
    flat: yes
- file:
    path: $PWD/kubeconfig
    state: absent

- name: helm init
  shell: microk8s helm init

- name: ensure coredns has started...
  shell: microk8s kubectl rollout status deployment/coredns -n kube-system

- name: write new-relic agent manifest
  template:
    src: ../templates/newrelic.yml
    dest: $PWD/newrelic.yml
  when: newrelic_license_key != ""

- name: apply newrelic manifest
  shell: microk8s kubectl apply -f $PWD/newrelic.yml
  when: newrelic_license_key != ""

- name: remove newrelic manifest
  file:
    path: $PWD/newrelic.yml
    state: absent
